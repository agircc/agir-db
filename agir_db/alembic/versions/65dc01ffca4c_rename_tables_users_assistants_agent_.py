"""rename tables: users->assistants, agent_assignments->assistant_assignments, agent_roles->assistant_roles

Revision ID: 65dc01ffca4c
Revises: abc123def456
Create Date: 2025-07-05 10:55:39.663249

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '65dc01ffca4c'
down_revision: Union[str, None] = 'abc123def456'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assistant_roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assistant_roles_name'), 'assistant_roles', ['name'], unique=False)
    op.create_table('assistant_assignments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('assistant_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('episode_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assistant_id'], ['assistants.id'], ),
    sa.ForeignKeyConstraint(['episode_id'], ['episodes.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['assistant_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assistant_assignments_assistant_id'), 'assistant_assignments', ['assistant_id'], unique=False)
    op.create_index(op.f('ix_assistant_assignments_episode_id'), 'assistant_assignments', ['episode_id'], unique=False)
    op.create_index(op.f('ix_assistant_assignments_id'), 'assistant_assignments', ['id'], unique=False)
    op.drop_index(op.f('ix_agent_roles_name'), table_name='agent_roles')
    op.drop_table('agent_roles')
    op.drop_index(op.f('ix_agent_assignments_assistant_id'), table_name='agent_assignments')
    op.drop_index(op.f('ix_agent_assignments_episode_id'), table_name='agent_assignments')
    op.drop_index(op.f('ix_agent_assignments_id'), table_name='agent_assignments')
    op.drop_table('agent_assignments')
    op.drop_index(op.f('ix_user_capabilities_id'), table_name='assistant_capabilities')
    op.drop_index(op.f('ix_user_capabilities_name'), table_name='assistant_capabilities')
    op.create_index(op.f('ix_assistant_capabilities_id'), 'assistant_capabilities', ['id'], unique=False)
    op.create_index(op.f('ix_assistant_capabilities_name'), 'assistant_capabilities', ['name'], unique=False)
    op.drop_index(op.f('ix_user_memories_id'), table_name='assistant_memories')
    op.create_index(op.f('ix_assistant_memories_id'), 'assistant_memories', ['id'], unique=False)
    op.drop_index(op.f('ix_user_organizations_id'), table_name='assistant_organizations')
    op.drop_index(op.f('ix_user_organizations_organization_id'), table_name='assistant_organizations')
    op.create_index(op.f('ix_assistant_organizations_id'), 'assistant_organizations', ['id'], unique=False)
    op.create_index(op.f('ix_assistant_organizations_organization_id'), 'assistant_organizations', ['organization_id'], unique=False)
    op.drop_index(op.f('ix_users_email'), table_name='assistants')
    op.drop_index(op.f('ix_users_first_name'), table_name='assistants')
    op.drop_index(op.f('ix_users_id'), table_name='assistants')
    op.drop_index(op.f('ix_users_last_name'), table_name='assistants')
    op.drop_index(op.f('ix_users_username'), table_name='assistants')
    op.create_index(op.f('ix_assistants_email'), 'assistants', ['email'], unique=True)
    op.create_index(op.f('ix_assistants_first_name'), 'assistants', ['first_name'], unique=False)
    op.create_index(op.f('ix_assistants_id'), 'assistants', ['id'], unique=False)
    op.create_index(op.f('ix_assistants_last_name'), 'assistants', ['last_name'], unique=False)
    op.create_index(op.f('ix_assistants_username'), 'assistants', ['username'], unique=True)
    op.add_column('state_roles', sa.Column('assistant_role_id', sa.UUID(), nullable=False))
    op.drop_constraint(op.f('state_roles_agent_role_id_fkey'), 'state_roles', type_='foreignkey')
    op.create_foreign_key(None, 'state_roles', 'assistant_roles', ['assistant_role_id'], ['id'], ondelete='CASCADE')
    op.drop_column('state_roles', 'agent_role_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('state_roles', sa.Column('agent_role_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'state_roles', type_='foreignkey')
    op.create_foreign_key(op.f('state_roles_agent_role_id_fkey'), 'state_roles', 'agent_roles', ['agent_role_id'], ['id'], ondelete='CASCADE')
    op.drop_column('state_roles', 'assistant_role_id')
    op.drop_index(op.f('ix_assistants_username'), table_name='assistants')
    op.drop_index(op.f('ix_assistants_last_name'), table_name='assistants')
    op.drop_index(op.f('ix_assistants_id'), table_name='assistants')
    op.drop_index(op.f('ix_assistants_first_name'), table_name='assistants')
    op.drop_index(op.f('ix_assistants_email'), table_name='assistants')
    op.create_index(op.f('ix_users_username'), 'assistants', ['username'], unique=True)
    op.create_index(op.f('ix_users_last_name'), 'assistants', ['last_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'assistants', ['id'], unique=False)
    op.create_index(op.f('ix_users_first_name'), 'assistants', ['first_name'], unique=False)
    op.create_index(op.f('ix_users_email'), 'assistants', ['email'], unique=True)
    op.drop_index(op.f('ix_assistant_organizations_organization_id'), table_name='assistant_organizations')
    op.drop_index(op.f('ix_assistant_organizations_id'), table_name='assistant_organizations')
    op.create_index(op.f('ix_user_organizations_organization_id'), 'assistant_organizations', ['organization_id'], unique=False)
    op.create_index(op.f('ix_user_organizations_id'), 'assistant_organizations', ['id'], unique=False)
    op.drop_index(op.f('ix_assistant_memories_id'), table_name='assistant_memories')
    op.create_index(op.f('ix_user_memories_id'), 'assistant_memories', ['id'], unique=False)
    op.drop_index(op.f('ix_assistant_capabilities_name'), table_name='assistant_capabilities')
    op.drop_index(op.f('ix_assistant_capabilities_id'), table_name='assistant_capabilities')
    op.create_index(op.f('ix_user_capabilities_name'), 'assistant_capabilities', ['name'], unique=False)
    op.create_index(op.f('ix_user_capabilities_id'), 'assistant_capabilities', ['id'], unique=False)
    op.create_table('agent_assignments',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('assistant_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('episode_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['assistant_id'], ['assistants.id'], name=op.f('agent_assignments_assistant_id_fkey')),
    sa.ForeignKeyConstraint(['episode_id'], ['episodes.id'], name=op.f('agent_assignments_episode_id_fkey')),
    sa.ForeignKeyConstraint(['role_id'], ['agent_roles.id'], name=op.f('agent_assignments_role_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('agent_assignments_pkey'))
    )
    op.create_index(op.f('ix_agent_assignments_id'), 'agent_assignments', ['id'], unique=False)
    op.create_index(op.f('ix_agent_assignments_episode_id'), 'agent_assignments', ['episode_id'], unique=False)
    op.create_index(op.f('ix_agent_assignments_assistant_id'), 'agent_assignments', ['assistant_id'], unique=False)
    op.create_table('agent_roles',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('model', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('scenario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], name=op.f('agent_roles_scenario_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('agent_roles_pkey'))
    )
    op.create_index(op.f('ix_agent_roles_name'), 'agent_roles', ['name'], unique=False)
    op.drop_index(op.f('ix_assistant_assignments_id'), table_name='assistant_assignments')
    op.drop_index(op.f('ix_assistant_assignments_episode_id'), table_name='assistant_assignments')
    op.drop_index(op.f('ix_assistant_assignments_assistant_id'), table_name='assistant_assignments')
    op.drop_table('assistant_assignments')
    op.drop_index(op.f('ix_assistant_roles_name'), table_name='assistant_roles')
    op.drop_table('assistant_roles')
    # ### end Alembic commands ###
